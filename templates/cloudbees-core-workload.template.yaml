AWSTemplateFormatVersion: 2010-09-09
Description: Deploys CloudBees Core into an existing Kubernetes cluster (qs-1pipqrqje)

Parameters:
  # KubeManifestLambdaArn:
  #   Type: String
  KubeGetLambdaArn:
    Type: String
  HelmLambdaArn:
    Type: String
  KubeConfigPath:
    Type: String
  KubeConfigKmsContext:
    Type: String
  StorageType:
    Type: String
  InitialNodeGroupSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  ProvisionedThroughputInMibps:
    Type: Number
  CustomValueYaml:
    Type: String
  PrivateSubnet1ID:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet3ID:
    Type: AWS::EC2::Subnet::Id
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-cloudbees-core/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String

Conditions:
  EFSCondition: !Equals [!Ref 'StorageType', 'aws-efs']

Resources:
  EFSStack:
    Condition: EFSCondition
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/cloudbees-core-efs.template.yaml"
      Parameters:
        HelmLambdaArn: !Ref HelmLambdaArn
        KubeConfigPath: !Ref KubeConfigPath
        KubeConfigKmsContext: !Ref KubeConfigKmsContext
        InitialNodeGroupSecurityGroup: !Ref InitialNodeGroupSecurityGroup
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        PrivateSubnet3ID: !Ref PrivateSubnet3ID
        ProvisionedThroughputInMibps: !Ref ProvisionedThroughputInMibps
  NginxIngressController:
    Type: "Custom::Helm"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref HelmLambdaArn
      KubeConfigPath: !Ref KubeConfigPath
      KubeConfigKmsContext: !Ref KubeConfigKmsContext
      Name: nginx-ingress
      Namespace: nginx-ingress
      Chart: stable/nginx-ingress
      Values:
        rbac.create: true
        controller.service.externalTrafficPolicy: Local
  IngressHostName:
    DependsOn: NginxIngressController
    Type: "Custom::KubeGet"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref KubeGetLambdaArn
      KubeConfigPath: !Ref KubeConfigPath
      KubeConfigKmsContext: !Ref KubeConfigKmsContext
      Namespace: nginx-ingress
      Name: !Sub 'svc/${NginxIngressController.Service0}'
      JsonPath: '{.status.loadBalancer.ingress[0].hostname}'
  CloudBeesCore:
    Type: "Custom::Helm"
    Version: '1.0'
    Properties:
      ServiceToken: !Ref HelmLambdaArn
      KubeConfigPath: !Ref KubeConfigPath
      KubeConfigKmsContext: !Ref KubeConfigKmsContext
      RepoUrl: https://charts.cloudbees.com/public/cloudbees
      Chart: cloudbees/cloudbees-core
      Version: 3.8.0+a0d07461ae1c
      Name: cloudbees-core
      Namespace: cloudbees-core
      ValueYaml: !Sub |
        nginx-ingress:
          Enabled: false
        OperationsCenter:
          HostName: ${IngressHostName}
          Platform: eks
          ExtraConfigMaps:
          - name: cloudbees-referrer
            labels:
              app.kubernetes.io/component: trial-telemetry
            data:
              .cloudbees-referrer.txt: |
                Core on AWS Quick Start
          ExtraVolumes:
            - name: cloudbees-referrer
              configMap:
                name:  cloudbees-referrer
          ExtraVolumeMounts:
          - name: cloudbees-referrer
            mountPath: /var/jenkins_home/.cloudbees-referrer.txt
            subPath: .cloudbees-referrer.txt
            readOnly: true
        Persistence:
          StorageClass: ${StorageType}
        NetworkPolicy:
          ingressControllerSelector:
            - namespaceSelector:
                matchLabels:
                  name: nginx-ingress
              podSelector:
                matchLabels:
                  app: nginx-ingress
                  component: controller
      CustomValueYaml: !Ref CustomValueYaml

Outputs:
  CloudBeesJenkinsOperationsCenterUrl:
    Value: !Sub "http://${IngressHostName}/cjoc"
  #InitialAdminPassword: requires `Custom::KubeExec` or similar
